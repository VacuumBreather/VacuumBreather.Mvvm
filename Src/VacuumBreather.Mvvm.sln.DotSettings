<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/CodeStyle/CodeCleanup/CleanupOnSave/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeCleanup/PartCleanupOnSave/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=Ergoneers_003A_0020Full_0020Cleanup/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="Ergoneers: Full Cleanup"&gt;&lt;CSArrangeThisQualifier&gt;True&lt;/CSArrangeThisQualifier&gt;&lt;CSRemoveCodeRedundancies&gt;True&lt;/CSRemoveCodeRedundancies&gt;&lt;CSUseVar&gt;&lt;BehavourStyle&gt;CAN_CHANGE_BOTH&lt;/BehavourStyle&gt;&lt;LocalVariableStyle&gt;IMPLICIT_WHEN_INITIALIZER_HAS_TYPE&lt;/LocalVariableStyle&gt;&lt;ForeachVariableStyle&gt;IMPLICIT_EXCEPT_PRIMITIVE_TYPES&lt;/ForeachVariableStyle&gt;&lt;/CSUseVar&gt;&lt;CSUpdateFileHeader&gt;True&lt;/CSUpdateFileHeader&gt;&lt;JsInsertSemicolon&gt;True&lt;/JsInsertSemicolon&gt;&lt;JsReformatCode&gt;True&lt;/JsReformatCode&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;RegionName&gt;Using Directives&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;JsFormatDocComments&gt;True&lt;/JsFormatDocComments&gt;&lt;CSCodeStyleAttributes ArrangeTypeAccessModifier="True" ArrangeTypeMemberAccessModifier="True" SortModifiers="True" RemoveRedundantParentheses="True" AddMissingParentheses="True" ArrangeBraces="True" ArrangeAttributes="True" ArrangeArgumentsStyle="True" ArrangeNamespaces="True" /&gt;&lt;CSEnforceVarKeywordUsageSettings&gt;True&lt;/CSEnforceVarKeywordUsageSettings&gt;&lt;CppAddOverrideSpecifier&gt;True&lt;/CppAddOverrideSpecifier&gt;&lt;CppReplaceImportDirective&gt;True&lt;/CppReplaceImportDirective&gt;&lt;CppSortMemberInitializers&gt;True&lt;/CppSortMemberInitializers&gt;&lt;CppClangTidyCleanupDescriptor android-cloexec-accept4="true" android-cloexec-socket="true" fuchsia-default-arguments="true" /&gt;&lt;FixViolations&gt;False&lt;/FixViolations&gt;&lt;RemoveCodeRedundancies&gt;True&lt;/RemoveCodeRedundancies&gt;&lt;CSArrangeQualifiers&gt;True&lt;/CSArrangeQualifiers&gt;&lt;CSFixBuiltinTypeReferences&gt;True&lt;/CSFixBuiltinTypeReferences&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSharpFormatDocComments&gt;True&lt;/CSharpFormatDocComments&gt;&lt;IDEA_SETTINGS&gt;&amp;lt;profile version="1.0"&amp;gt;&#xD;
  &amp;lt;option name="myName" value="Ergoneers" /&amp;gt;&#xD;
&amp;lt;/profile&amp;gt;&lt;/IDEA_SETTINGS&gt;&lt;XAMLCollapseEmptyTags&gt;False&lt;/XAMLCollapseEmptyTags&gt;&lt;/Profile&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/SilentCleanupProfile/@EntryValue">Ergoneers: Full Cleanup</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CommonFormatter/ENFORCE_LINE_ENDING_STYLE/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/APPLY_ON_COMPLETION/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_IFELSE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_WHILE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/FORCE_ATTRIBUTE_STYLE/@EntryValue">Join</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/LOCAL_FUNCTION_BODY/@EntryValue">ExpressionBody</s:String>
	
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/PARENTHESES_NON_OBVIOUS_OPERATIONS/@EntryValue">Arithmetic, Shift, Bitwise, Conditional</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/USE_HEURISTICS_FOR_BODY_STYLE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_LINQ_QUERY/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARGUMENT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARRAY_AND_OBJECT_INITIALIZER/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_BINARY_PATTERNS/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_EXTENDS_LIST/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_PARAMETER/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_PROPERTY_PATTERN/@EntryValue">True</s:Boolean>
	
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTIPLE_DECLARATION/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_CONSTRAINS/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_LIST/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_TUPLE_COMPONENTS/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AFTER_CONTROL_TRANSFER_STATEMENTS/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AFTER_MULTILINE_STATEMENTS/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_BLOCK_CASE_SECTION/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_MULTILINE_CASE_SECTION/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_AUTO_PROPERTY/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_INVOCABLE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_PROPERTY/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_BEFORE_BLOCK_STATEMENTS/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_BEFORE_CONTROL_TRANSFER_STATEMENTS/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_BEFORE_MULTILINE_STATEMENTS/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_BEFORE_SINGLE_LINE_COMMENT/@EntryValue">1</s:Int64>
	
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_FOR_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_FOREACH_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_WHILE_STMT/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_CODE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_DECLARATION_PARENS_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_EMBEDDED_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_EXPR_MEMBER_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_INVOCATION_PARENS_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_SWITCH_EXPRESSION_ARRANGEMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_USER_LINEBREAKS/@EntryValue">False</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/MAX_ENUM_MEMBERS_ON_LINE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/MAX_FORMAL_PARAMETERS_ON_LINE/@EntryValue">4</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/MAX_INVOCATION_ARGUMENTS_ON_LINE/@EntryValue">4</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSORHOLDER_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_CONSTRUCTOR_INITIALIZER_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_EMBEDDED_STATEMENT_ON_SAME_LINE/@EntryValue">ALWAYS</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_TYPE_CONSTRAINTS_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SIMPLE_EMBEDDED_STATEMENT_STYLE/@EntryValue">ON_SINGLE_LINE</s:String>
	
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/USE_INDENT_FROM_VS/@EntryValue">False</s:Boolean>
	
	
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARGUMENTS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARRAY_INITIALIZER_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_BINARY_PATTERN_OP/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_FIRST_TYPE_PARAMETER_CONSTRAINT/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_CHAINED_BINARY_EXPRESSIONS/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_CHAINED_BINARY_PATTERNS/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_CHAINED_METHOD_CALLS/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_MULTIPLE_TYPE_PARAMEER_CONSTRAINTS_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CppIntroduceType/InsertTypeAlias/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;
  &lt;TypePattern DisplayName="Non-reorderable types"&gt;
    &lt;TypePattern.Match&gt;
      &lt;Or&gt;
        &lt;And&gt;
          &lt;Kind Is="Interface" /&gt;
          &lt;Or&gt;
            &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;
            &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;
          &lt;/Or&gt;
        &lt;/And&gt;
        &lt;Kind Is="Struct" /&gt;
        &lt;HasAttribute Name="JetBrains.Annotations.NoReorderAttribute" /&gt;
        &lt;HasAttribute Name="JetBrains.Annotations.NoReorder" /&gt;
      &lt;/Or&gt;
    &lt;/TypePattern.Match&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="xUnit.net Test Classes" RemoveRegions="All"&gt;
    &lt;TypePattern.Match&gt;
      &lt;And&gt;
        &lt;Kind Is="Class" /&gt;
        &lt;HasMember&gt;
          &lt;And&gt;
            &lt;Kind Is="Method" /&gt;
            &lt;Or&gt;
              &lt;HasAttribute Name="Xunit.FactAttribute" Inherited="True" /&gt;
              &lt;HasAttribute Name="Xunit.TheoryAttribute" Inherited="True" /&gt;
            &lt;/Or&gt;
          &lt;/And&gt;
        &lt;/HasMember&gt;
      &lt;/And&gt;
    &lt;/TypePattern.Match&gt;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
      &lt;Entry.Match&gt;
        &lt;Or&gt;
          &lt;Kind Is="Constructor" /&gt;
          &lt;And&gt;
            &lt;Kind Is="Method" /&gt;
            &lt;ImplementsInterface Name="System.IDisposable" /&gt;
          &lt;/And&gt;
        &lt;/Or&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Kind Order="Constructor" /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="All other members" /&gt;
    &lt;Entry DisplayName="Test Methods" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;HasAttribute Name="Xunit.FactAttribute" /&gt;
          &lt;HasAttribute Name="Xunit.TheoryAttribute" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="NUnit Test Fixtures" RemoveRegions="All"&gt;
    &lt;TypePattern.Match&gt;
      &lt;And&gt;
        &lt;Kind Is="Class" /&gt;
        &lt;Or&gt;
          &lt;HasAttribute Name="NUnit.Framework.TestFixtureAttribute" Inherited="True" /&gt;
          &lt;HasAttribute Name="NUnit.Framework.TestFixtureSourceAttribute" Inherited="True" /&gt;
          &lt;HasMember&gt;
            &lt;And&gt;
              &lt;Kind Is="Method" /&gt;
              &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
              &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" /&gt;
              &lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" /&gt;
            &lt;/And&gt;
          &lt;/HasMember&gt;
        &lt;/Or&gt;
      &lt;/And&gt;
    &lt;/TypePattern.Match&gt;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Or&gt;
            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.TestFixtureSetUpAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.TestFixtureTearDownAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.OneTimeSetUpAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.OneTimeTearDownAttribute" Inherited="True" /&gt;
          &lt;/Or&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="All other members" /&gt;
    &lt;Entry DisplayName="Test Methods" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
          &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" /&gt;
          &lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="StyleCop Interfaces Layout" RemoveRegions="All" Priority="25"&gt;
    &lt;TypePattern.Match&gt;
      &lt;Or&gt;
        &lt;Kind Is="Interface" /&gt;
        &lt;And&gt;
          &lt;Or&gt;
            &lt;Kind Is="Class" /&gt;
            &lt;Kind Is="Struct" /&gt;
          &lt;/Or&gt;
          &lt;Not&gt;
            &lt;Or&gt;
              &lt;Access Is="Public" /&gt;
              &lt;Access Is="Internal" /&gt;
            &lt;/Or&gt;
          &lt;/Not&gt;
        &lt;/And&gt;
      &lt;/Or&gt;
    &lt;/TypePattern.Match&gt;
    &lt;Entry DisplayName="Constants"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Constant" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Static fields"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Field" /&gt;
          &lt;Static /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Kind Order="Constant Field" /&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;Readonly /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Fields"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Field" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;Readonly /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Constructors and destructors"&gt;
      &lt;Entry.Match&gt;
        &lt;Or&gt;
          &lt;Kind Is="Constructor" /&gt;
          &lt;Kind Is="Destructor" /&gt;
        &lt;/Or&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Static /&gt;
        &lt;Kind Order="Constructor Destructor" /&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Delegates"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Delegate" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;Static /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Public events"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Event" /&gt;
          &lt;Access Is="Public" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public" /&gt;
        &lt;Static /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Interface events"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Event" /&gt;
          &lt;ImplementsInterface /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;ImplementsInterface Immediate="True" /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Other events"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Event" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;Static /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Enums"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Enum" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Interfaces"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Interface" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Public properties"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Property" /&gt;
          &lt;Access Is="Public" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public" /&gt;
        &lt;Static /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Interface properties"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Property" /&gt;
          &lt;ImplementsInterface /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;ImplementsInterface Immediate="True" /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Other properties"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Property" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;Static /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Public indexers"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Indexer" /&gt;
          &lt;Access Is="Public" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public" /&gt;
        &lt;Static /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Interface indexers" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Indexer" /&gt;
          &lt;ImplementsInterface /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;ImplementsInterface Immediate="True" /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Other indexers"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Indexer" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;Static /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Or&gt;
            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.FixtureSetUpAttribute" Inherited="True" /&gt;
            &lt;HasAttribute Name="NUnit.Framework.FixtureTearDownAttribute" Inherited="True" /&gt;
          &lt;/Or&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Test Methods" Priority="100"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Public operators"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Operator" /&gt;
          &lt;Or&gt;
            &lt;Access Is="Public" /&gt;
            &lt;Access Is="Internal" /&gt;
          &lt;/Or&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access /&gt;
        &lt;Static /&gt;
        &lt;Virtual /&gt;
        &lt;Override /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Public methods"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Or&gt;
            &lt;Access Is="Public" /&gt;
            &lt;Access Is="Internal" /&gt;
          &lt;/Or&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access /&gt;
        &lt;Static /&gt;
        &lt;Virtual /&gt;
        &lt;Override /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Interface methods"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;ImplementsInterface /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;ImplementsInterface Immediate="True" /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Protected Operators"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Operator" /&gt;
          &lt;Or&gt;
            &lt;Access Is="Protected" /&gt;
            &lt;Access Is="ProtectedInternal" /&gt;
          &lt;/Or&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access /&gt;
        &lt;Static /&gt;
        &lt;Virtual /&gt;
        &lt;Override /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Protected Methods"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Or&gt;
            &lt;Access Is="Protected" /&gt;
            &lt;Access Is="ProtectedInternal" /&gt;
          &lt;/Or&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access /&gt;
        &lt;Static /&gt;
        &lt;Virtual /&gt;
        &lt;Override /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Event handlers"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Access Is="Private" /&gt;
          &lt;HandlesEvent /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Static /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Private operators"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Operator" /&gt;
          &lt;Access Is="Private" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access /&gt;
        &lt;Static /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Private methods"&gt;
      &lt;Entry.Match&gt;
        &lt;And&gt;
          &lt;Kind Is="Method" /&gt;
          &lt;Access Is="Private" /&gt;
        &lt;/And&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Access /&gt;
        &lt;Static /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Nested structs"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Struct" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Static /&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="Nested classes"&gt;
      &lt;Entry.Match&gt;
        &lt;Kind Is="Class" /&gt;
      &lt;/Entry.Match&gt;
      &lt;Entry.SortBy&gt;
        &lt;Static /&gt;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;Name /&gt;
      &lt;/Entry.SortBy&gt;
    &lt;/Entry&gt;
    &lt;Entry DisplayName="All other members" /&gt;
  &lt;/TypePattern&gt;
  &lt;TypePattern DisplayName="StyleCop Layout" RemoveRegions="All" Priority="25"&gt;
    &lt;TypePattern.Match&gt;
      &lt;Or&gt;
        &lt;Kind Is="Class" /&gt;
        &lt;Kind Is="Struct" /&gt;
      &lt;/Or&gt;
    &lt;/TypePattern.Match&gt;
      &lt;Group DisplayName="Constants"&gt;
        &lt;Entry DisplayName="Constants"&gt;
          &lt;Entry.Match&gt;
            &lt;Kind Is="Constant" /&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Access /&gt;
            &lt;Readonly /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
      &lt;/Group&gt;
    &lt;Group DisplayName="Fields"&gt;
      &lt;Entry DisplayName="Static fields"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
              &lt;Kind Is="Field" /&gt;
              &lt;Static /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access /&gt;
          &lt;Readonly /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
      &lt;Entry DisplayName="Fields"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Field" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access /&gt;
          &lt;Readonly /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Group&gt;
    &lt;Group DisplayName="Constructors and Destructors"&gt;
      &lt;Entry DisplayName="Constructors and destructors"&gt;
        &lt;Entry.Match&gt;
          &lt;Or&gt;
            &lt;Kind Is="Constructor" /&gt;
            &lt;Kind Is="Destructor" /&gt;
          &lt;/Or&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Kind Order="Constructor Destructor" /&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Group&gt;
    &lt;Group DisplayName="Public Events and Delegates"&gt;
      &lt;Entry DisplayName="Delegates"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Delegate" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
      &lt;Entry DisplayName="Public events"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
            &lt;Kind Is="Event" /&gt;
            &lt;Or&gt;
              &lt;Access Is="Public" /&gt;
              &lt;Access Is="Internal" /&gt;
              &lt;ImplementsInterface /&gt;
            &lt;/Or&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access /&gt;
          &lt;Static /&gt;
          &lt;ImplementsInterface /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Group&gt;
    &lt;Group DisplayName="Protected Events"&gt;
      &lt;Entry DisplayName="Protected events"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
            &lt;Kind Is="Event" /&gt;
            &lt;Or&gt;
              &lt;Access Is="Protected" /&gt;
              &lt;Access Is="ProtectedInternal" /&gt;
            &lt;/Or&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Group&gt;
    &lt;Group DisplayName="Private Events"&gt;
      &lt;Entry DisplayName="Private events"&gt;
        &lt;Entry.Match&gt;
          &lt;And&gt;
            &lt;Kind Is="Event" /&gt;
            &lt;Access Is="Private" /&gt;
          &lt;/And&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Group&gt;
    &lt;Group DisplayName="Enums"&gt;
      &lt;Entry DisplayName="Enums"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Enum" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Group&gt;
    &lt;Group DisplayName="Interfaces"&gt;
      &lt;Entry DisplayName="Interfaces"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Interface" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Group&gt;
    &lt;Group DisplayName="Properties"&gt;
      &lt;Group DisplayName="Public Properties"&gt;
        &lt;Entry DisplayName="Public properties"&gt;
          &lt;Entry.Match&gt;
            &lt;And&gt;
              &lt;Kind Is="Property" /&gt;
              &lt;Or&gt;
                &lt;Access Is="Public" /&gt;
                &lt;Access Is="Internal" /&gt;
                &lt;ImplementsInterface /&gt;
              &lt;/Or&gt;
            &lt;/And&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Access Order="Public" /&gt;
            &lt;Static /&gt;
            &lt;ImplementsInterface Immediate="True" /&gt;
            &lt;Name /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
      &lt;/Group&gt;
      &lt;Group DisplayName="Protected Properties"&gt;
        &lt;Entry DisplayName="Protected properties"&gt;
          &lt;Entry.Match&gt;
            &lt;And&gt;
              &lt;Kind Is="Property" /&gt;
              &lt;Or&gt;
                &lt;Access Is="Protected" /&gt;
                &lt;Access Is="ProtectedInternal" /&gt;
              &lt;/Or&gt;
            &lt;/And&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Static /&gt;
            &lt;Name /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
      &lt;/Group&gt;
      &lt;Group DisplayName="Private Properties"&gt;
        &lt;Entry DisplayName="Private properties"&gt;
          &lt;Entry.Match&gt;
            &lt;And&gt;
              &lt;Kind Is="Property" /&gt;
              &lt;Access Is="Private" /&gt;
            &lt;/And&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Static /&gt;
            &lt;Name /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
      &lt;/Group&gt;
    &lt;/Group&gt;
    &lt;Group DisplayName="Indexers"&gt;
      &lt;Group DisplayName="Public Indexers"&gt;
        &lt;Entry DisplayName="Public indexers"&gt;
          &lt;Entry.Match&gt;
            &lt;And&gt;
              &lt;Kind Is="Indexer" /&gt;
              &lt;Or&gt;
                &lt;Access Is="Public" /&gt;
                &lt;Access Is="Internal" /&gt;
                &lt;ImplementsInterface /&gt;
              &lt;/Or&gt;
            &lt;/And&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Access Order="Public" /&gt;
            &lt;Static /&gt;
            &lt;ImplementsInterface Immediate="True" /&gt;
            &lt;Name /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
      &lt;/Group&gt;
      &lt;Group DisplayName="Protected Indexers"&gt;
        &lt;Entry DisplayName="Protected indexers"&gt;
          &lt;Entry.Match&gt;
            &lt;And&gt;
              &lt;Kind Is="Indexer" /&gt;
              &lt;Or&gt;
                &lt;Access Is="Protected" /&gt;
                &lt;Access Is="ProtectedInternal" /&gt;
              &lt;/Or&gt;
            &lt;/And&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Static /&gt;
            &lt;Name /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
      &lt;/Group&gt;
      &lt;Group DisplayName="Private Indexers"&gt;
        &lt;Entry DisplayName="Private indexers"&gt;
          &lt;Entry.Match&gt;
            &lt;And&gt;
              &lt;Kind Is="Indexer" /&gt;
              &lt;Access Is="Private" /&gt;
            &lt;/And&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Static /&gt;
            &lt;Name /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
      &lt;/Group&gt;
    &lt;/Group&gt;
    &lt;Group DisplayName="Methods"&gt;
      &lt;Group DisplayName="Public Methods"&gt;
        &lt;Entry DisplayName="Public operators"&gt;
          &lt;Entry.Match&gt;
            &lt;And&gt;
              &lt;Kind Is="Operator" /&gt;
              &lt;Or&gt;
                &lt;Access Is="Public" /&gt;
                &lt;Access Is="Internal" /&gt;
                &lt;ImplementsInterface /&gt;
              &lt;/Or&gt;
            &lt;/And&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Access /&gt;
            &lt;Static /&gt;
            &lt;Virtual /&gt;
            &lt;Override /&gt;
            &lt;ImplementsInterface Immediate="True" /&gt;
            &lt;Name /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Public methods"&gt;
          &lt;Entry.Match&gt;
            &lt;And&gt;
              &lt;Kind Is="Method" /&gt;
              &lt;Or&gt;
                &lt;Access Is="Public" /&gt;
                &lt;Access Is="Internal" /&gt;
                &lt;ImplementsInterface /&gt;
              &lt;/Or&gt;
            &lt;/And&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Access /&gt;
            &lt;Static /&gt;
            &lt;Virtual /&gt;
            &lt;Override /&gt;
            &lt;ImplementsInterface Immediate="True" /&gt;
            &lt;Name /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
      &lt;/Group&gt;
      &lt;Group DisplayName="Protected Methods"&gt;
        &lt;Entry DisplayName="Protected Operators"&gt;
          &lt;Entry.Match&gt;
            &lt;And&gt;
              &lt;Kind Is="Operator" /&gt;
              &lt;Or&gt;
                &lt;Access Is="Protected" /&gt;
                &lt;Access Is="ProtectedInternal" /&gt;
              &lt;/Or&gt;
            &lt;/And&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Access /&gt;
            &lt;Static /&gt;
            &lt;Virtual /&gt;
            &lt;Override /&gt;
            &lt;Name /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Protected Methods"&gt;
          &lt;Entry.Match&gt;
            &lt;And&gt;
              &lt;Kind Is="Method" /&gt;
              &lt;Or&gt;
                &lt;Access Is="Protected" /&gt;
                &lt;Access Is="ProtectedInternal" /&gt;
              &lt;/Or&gt;
            &lt;/And&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Access /&gt;
            &lt;Static /&gt;
            &lt;Virtual /&gt;
            &lt;Override /&gt;
            &lt;Name /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
      &lt;/Group&gt;
      &lt;Group DisplayName="Private Methods"&gt;
        &lt;Entry DisplayName="Private operators"&gt;
          &lt;Entry.Match&gt;
            &lt;And&gt;
              &lt;Kind Is="Operator" /&gt;
              &lt;Access Is="Private" /&gt;
            &lt;/And&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Access /&gt;
            &lt;Static /&gt;
            &lt;Name /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Private methods"&gt;
          &lt;Entry.Match&gt;
            &lt;And&gt;
              &lt;Kind Is="Method" /&gt;
              &lt;Access Is="Private" /&gt;
            &lt;/And&gt;
          &lt;/Entry.Match&gt;
          &lt;Entry.SortBy&gt;
            &lt;Access /&gt;
            &lt;Static /&gt;
            &lt;Name /&gt;
          &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
      &lt;/Group&gt;
    &lt;/Group&gt;
    &lt;Group DisplayName="Nested Types"&gt;
      &lt;Entry DisplayName="Nested structs"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Struct" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
      &lt;Entry DisplayName="Nested classes"&gt;
        &lt;Entry.Match&gt;
          &lt;Kind Is="Class" /&gt;
        &lt;/Entry.Match&gt;
        &lt;Entry.SortBy&gt;
          &lt;Static /&gt;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;
          &lt;Name /&gt;
        &lt;/Entry.SortBy&gt;
      &lt;/Entry&gt;
    &lt;/Group&gt;
    &lt;Entry DisplayName="All other members" /&gt;
  &lt;/TypePattern&gt;
&lt;/Patterns&gt;<s:Boolean x:Key="/Default/UserDictionary/Words/=Adorner/@EntryIndexedValue">True</s:Boolean>
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
  &lt;TypePattern DisplayName="Non-reorderable types"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;Or&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Interface" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;&#xD;
            &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
        &lt;Kind Is="Struct" /&gt;&#xD;
        &lt;HasAttribute Name="JetBrains.Annotations.NoReorderAttribute" /&gt;&#xD;
        &lt;HasAttribute Name="JetBrains.Annotations.NoReorder" /&gt;&#xD;
      &lt;/Or&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="xUnit.net Test Classes" RemoveRegions="All"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;And&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
        &lt;HasMember&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;Or&gt;&#xD;
              &lt;HasAttribute Name="Xunit.FactAttribute" Inherited="True" /&gt;&#xD;
              &lt;HasAttribute Name="Xunit.TheoryAttribute" Inherited="True" /&gt;&#xD;
            &lt;/Or&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/HasMember&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Constructor" /&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Method" /&gt;&#xD;
            &lt;ImplementsInterface Name="System.IDisposable" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Kind Order="Constructor" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
    &lt;Entry DisplayName="Test Methods" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;HasAttribute Name="Xunit.FactAttribute" /&gt;&#xD;
          &lt;HasAttribute Name="Xunit.TheoryAttribute" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="NUnit Test Fixtures" RemoveRegions="All"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;And&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestFixtureAttribute" Inherited="True" /&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestFixtureSourceAttribute" Inherited="True" /&gt;&#xD;
          &lt;HasMember&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Method" /&gt;&#xD;
              &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;&#xD;
              &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" /&gt;&#xD;
              &lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" /&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/HasMember&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TestFixtureSetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TestFixtureTearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.OneTimeSetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.OneTimeTearDownAttribute" Inherited="True" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
    &lt;Entry DisplayName="Test Methods" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestCaseAttribute" /&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestCaseSourceAttribute" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="StyleCop Interfaces Layout" RemoveRegions="All" Priority="25"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;Or&gt;&#xD;
        &lt;Kind Is="Interface" /&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;Kind Is="Class" /&gt;&#xD;
            &lt;Kind Is="Struct" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;Or&gt;&#xD;
              &lt;Access Is="Public" /&gt;&#xD;
              &lt;Access Is="Internal" /&gt;&#xD;
            &lt;/Or&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Or&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
    &lt;Entry DisplayName="Constants"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Constant" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Static fields"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Field" /&gt;&#xD;
          &lt;Static /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Kind Order="Constant Field" /&gt;&#xD;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
        &lt;Readonly /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Fields"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Field" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
        &lt;Readonly /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Constructors and destructors"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Constructor" /&gt;&#xD;
          &lt;Kind Is="Destructor" /&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Kind Order="Constructor Destructor" /&gt;&#xD;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Delegates"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Delegate" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Public events"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Event" /&gt;&#xD;
          &lt;Access Is="Public" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Public" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Interface events"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Event" /&gt;&#xD;
          &lt;ImplementsInterface /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;ImplementsInterface Immediate="True" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Other events"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Event" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Enums"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Enum" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Interfaces"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Interface" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Public properties"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Property" /&gt;&#xD;
          &lt;Access Is="Public" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Public" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Interface properties"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Property" /&gt;&#xD;
          &lt;ImplementsInterface /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;ImplementsInterface Immediate="True" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Other properties"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Property" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Public indexers"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Indexer" /&gt;&#xD;
          &lt;Access Is="Public" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Public" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Interface indexers" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Indexer" /&gt;&#xD;
          &lt;ImplementsInterface /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;ImplementsInterface Immediate="True" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Other indexers"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Indexer" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.FixtureSetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.FixtureTearDownAttribute" Inherited="True" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Test Methods" Priority="100"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Public operators"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Operator" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;Access Is="Public" /&gt;&#xD;
            &lt;Access Is="Internal" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Virtual /&gt;&#xD;
        &lt;Override /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Public methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;Access Is="Public" /&gt;&#xD;
            &lt;Access Is="Internal" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Virtual /&gt;&#xD;
        &lt;Override /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Interface methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;ImplementsInterface /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;ImplementsInterface Immediate="True" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Protected Operators"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Operator" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;Access Is="Protected" /&gt;&#xD;
            &lt;Access Is="ProtectedInternal" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Virtual /&gt;&#xD;
        &lt;Override /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Protected Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;Access Is="Protected" /&gt;&#xD;
            &lt;Access Is="ProtectedInternal" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Virtual /&gt;&#xD;
        &lt;Override /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Event handlers"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Access Is="Private" /&gt;&#xD;
          &lt;HandlesEvent /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Private operators"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Operator" /&gt;&#xD;
          &lt;Access Is="Private" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Private methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Access Is="Private" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Nested structs"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Struct" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Nested classes"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="StyleCop Layout" RemoveRegions="All" Priority="25"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;Or&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
        &lt;Kind Is="Struct" /&gt;&#xD;
      &lt;/Or&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
    &lt;Group DisplayName="Constants and Fields"&gt;&#xD;
      &lt;Entry DisplayName="Constants and Static fields"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Field" /&gt;&#xD;
              &lt;Static /&gt;&#xD;
            &lt;/And&gt;&#xD;
            &lt;Kind Is="Constant" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Access /&gt;&#xD;
          &lt;Readonly /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
      &lt;Entry DisplayName="Fields"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;Kind Is="Field" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Access /&gt;&#xD;
          &lt;Readonly /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Group&gt;&#xD;
    &lt;Group DisplayName="Constructors and Destructors"&gt;&#xD;
      &lt;Entry DisplayName="Constructors and destructors"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;Kind Is="Constructor" /&gt;&#xD;
            &lt;Kind Is="Destructor" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Static /&gt;&#xD;
          &lt;Kind Order="Constructor Destructor" /&gt;&#xD;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Group&gt;&#xD;
    &lt;Group DisplayName="Public Events and Delegates"&gt;&#xD;
      &lt;Entry DisplayName="Delegates"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;Kind Is="Delegate" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
          &lt;Static /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
      &lt;Entry DisplayName="Public events"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Event" /&gt;&#xD;
            &lt;Or&gt;&#xD;
              &lt;Access Is="Public" /&gt;&#xD;
              &lt;Access Is="Internal" /&gt;&#xD;
              &lt;ImplementsInterface /&gt;&#xD;
            &lt;/Or&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Access /&gt;&#xD;
          &lt;Static /&gt;&#xD;
          &lt;ImplementsInterface /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Group&gt;&#xD;
    &lt;Group DisplayName="Protected Events"&gt;&#xD;
      &lt;Entry DisplayName="Protected events"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Event" /&gt;&#xD;
            &lt;Or&gt;&#xD;
              &lt;Access Is="Protected" /&gt;&#xD;
              &lt;Access Is="ProtectedInternal" /&gt;&#xD;
            &lt;/Or&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Static /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Group&gt;&#xD;
    &lt;Group DisplayName="Private Events"&gt;&#xD;
      &lt;Entry DisplayName="Private events"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Event" /&gt;&#xD;
            &lt;Access Is="Private" /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Static /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Group&gt;&#xD;
    &lt;Group DisplayName="Enums"&gt;&#xD;
      &lt;Entry DisplayName="Enums"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;Kind Is="Enum" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Group&gt;&#xD;
    &lt;Group DisplayName="Interfaces"&gt;&#xD;
      &lt;Entry DisplayName="Interfaces"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;Kind Is="Interface" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Group&gt;&#xD;
    &lt;Group DisplayName="Properties"&gt;&#xD;
      &lt;Group DisplayName="Public Properties"&gt;&#xD;
        &lt;Entry DisplayName="Public properties"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Property" /&gt;&#xD;
              &lt;Or&gt;&#xD;
                &lt;Access Is="Public" /&gt;&#xD;
                &lt;Access Is="Internal" /&gt;&#xD;
                &lt;ImplementsInterface /&gt;&#xD;
              &lt;/Or&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Access Order="Public" /&gt;&#xD;
            &lt;Static /&gt;&#xD;
            &lt;ImplementsInterface Immediate="True" /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
      &lt;/Group&gt;&#xD;
      &lt;Group DisplayName="Protected Properties"&gt;&#xD;
        &lt;Entry DisplayName="Protected properties"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Property" /&gt;&#xD;
              &lt;Or&gt;&#xD;
                &lt;Access Is="Protected" /&gt;&#xD;
                &lt;Access Is="ProtectedInternal" /&gt;&#xD;
              &lt;/Or&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Static /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
      &lt;/Group&gt;&#xD;
      &lt;Group DisplayName="Private Properties"&gt;&#xD;
        &lt;Entry DisplayName="Private properties"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Property" /&gt;&#xD;
              &lt;Access Is="Private" /&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Static /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
      &lt;/Group&gt;&#xD;
    &lt;/Group&gt;&#xD;
    &lt;Group DisplayName="Indexers"&gt;&#xD;
      &lt;Group DisplayName="Public Indexers"&gt;&#xD;
        &lt;Entry DisplayName="Public indexers"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Indexer" /&gt;&#xD;
              &lt;Or&gt;&#xD;
                &lt;Access Is="Public" /&gt;&#xD;
                &lt;Access Is="Internal" /&gt;&#xD;
                &lt;ImplementsInterface /&gt;&#xD;
              &lt;/Or&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Access Order="Public" /&gt;&#xD;
            &lt;Static /&gt;&#xD;
            &lt;ImplementsInterface Immediate="True" /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
      &lt;/Group&gt;&#xD;
      &lt;Group DisplayName="Protected Indexers"&gt;&#xD;
        &lt;Entry DisplayName="Protected indexers"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Indexer" /&gt;&#xD;
              &lt;Or&gt;&#xD;
                &lt;Access Is="Protected" /&gt;&#xD;
                &lt;Access Is="ProtectedInternal" /&gt;&#xD;
              &lt;/Or&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Static /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
      &lt;/Group&gt;&#xD;
      &lt;Group DisplayName="Private Indexers"&gt;&#xD;
        &lt;Entry DisplayName="Private indexers"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Indexer" /&gt;&#xD;
              &lt;Access Is="Private" /&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Static /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
      &lt;/Group&gt;&#xD;
    &lt;/Group&gt;&#xD;
    &lt;Group DisplayName="Methods"&gt;&#xD;
      &lt;Group DisplayName="Public Methods"&gt;&#xD;
        &lt;Entry DisplayName="Public operators"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Operator" /&gt;&#xD;
              &lt;Or&gt;&#xD;
                &lt;Access Is="Public" /&gt;&#xD;
                &lt;Access Is="Internal" /&gt;&#xD;
                &lt;ImplementsInterface /&gt;&#xD;
              &lt;/Or&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Access /&gt;&#xD;
            &lt;Static /&gt;&#xD;
            &lt;Virtual /&gt;&#xD;
            &lt;Override /&gt;&#xD;
            &lt;ImplementsInterface Immediate="True" /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
        &lt;Entry DisplayName="Public methods"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Method" /&gt;&#xD;
              &lt;Or&gt;&#xD;
                &lt;Access Is="Public" /&gt;&#xD;
                &lt;Access Is="Internal" /&gt;&#xD;
                &lt;ImplementsInterface /&gt;&#xD;
              &lt;/Or&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Access /&gt;&#xD;
            &lt;Static /&gt;&#xD;
            &lt;Virtual /&gt;&#xD;
            &lt;Override /&gt;&#xD;
            &lt;ImplementsInterface Immediate="True" /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
      &lt;/Group&gt;&#xD;
      &lt;Group DisplayName="Protected Methods"&gt;&#xD;
        &lt;Entry DisplayName="Protected Operators"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Operator" /&gt;&#xD;
              &lt;Or&gt;&#xD;
                &lt;Access Is="Protected" /&gt;&#xD;
                &lt;Access Is="ProtectedInternal" /&gt;&#xD;
              &lt;/Or&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Access /&gt;&#xD;
            &lt;Static /&gt;&#xD;
            &lt;Virtual /&gt;&#xD;
            &lt;Override /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
        &lt;Entry DisplayName="Protected Methods"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Method" /&gt;&#xD;
              &lt;Or&gt;&#xD;
                &lt;Access Is="Protected" /&gt;&#xD;
                &lt;Access Is="ProtectedInternal" /&gt;&#xD;
              &lt;/Or&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Access /&gt;&#xD;
            &lt;Static /&gt;&#xD;
            &lt;Virtual /&gt;&#xD;
            &lt;Override /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
      &lt;/Group&gt;&#xD;
      &lt;Group DisplayName="Private Methods"&gt;&#xD;
        &lt;Entry DisplayName="Private operators"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Operator" /&gt;&#xD;
              &lt;Access Is="Private" /&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Access /&gt;&#xD;
            &lt;Static /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
        &lt;Entry DisplayName="Private methods"&gt;&#xD;
          &lt;Entry.Match&gt;&#xD;
            &lt;And&gt;&#xD;
              &lt;Kind Is="Method" /&gt;&#xD;
              &lt;Access Is="Private" /&gt;&#xD;
            &lt;/And&gt;&#xD;
          &lt;/Entry.Match&gt;&#xD;
          &lt;Entry.SortBy&gt;&#xD;
            &lt;Access /&gt;&#xD;
            &lt;Static /&gt;&#xD;
            &lt;Name /&gt;&#xD;
          &lt;/Entry.SortBy&gt;&#xD;
        &lt;/Entry&gt;&#xD;
      &lt;/Group&gt;&#xD;
    &lt;/Group&gt;&#xD;
    &lt;Group DisplayName="Nested Types"&gt;&#xD;
      &lt;Entry DisplayName="Nested structs"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;Kind Is="Struct" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Static /&gt;&#xD;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
      &lt;Entry DisplayName="Nested classes"&gt;&#xD;
        &lt;Entry.Match&gt;&#xD;
          &lt;Kind Is="Class" /&gt;&#xD;
        &lt;/Entry.Match&gt;&#xD;
        &lt;Entry.SortBy&gt;&#xD;
          &lt;Static /&gt;&#xD;
          &lt;Access Order="Public Internal ProtectedInternal Protected Private" /&gt;&#xD;
          &lt;Name /&gt;&#xD;
        &lt;/Entry.SortBy&gt;&#xD;
      &lt;/Entry&gt;&#xD;
    &lt;/Group&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpVarKeywordUsage/ForBuiltInTypes/@EntryValue">UseVarWhenEvident</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpVarKeywordUsage/ForSimpleTypes/@EntryValue">UseVarWhenEvident</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/EditorConfig/EnableClangFormatSupport/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/EditorConfig/ShowEditorConfigStatusBarIndicator/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/EditorConfig/SyncToVisualStudio/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/EncapsulateField/MakeFieldPrivate/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/EncapsulateField/UpdateExternalUsagesOnly/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/EncapsulateField/UseAutoProperty/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/Naming/CSharpAutoNaming/IsNotificationDisabled/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/Abbreviations/=UI/@EntryIndexedValue">UI</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/Naming/CSharpNaming/ApplyAutoDetectedRules/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/EventHandlerPatternLong/@EntryValue">On$object$$event$</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=LocalConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=LocalFunctions/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Method/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="_" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="_" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EFeature_002EServices_002ECpp_002ECodeStyle_002ECppCodeStyleSettingsMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EFeature_002EServices_002ECpp_002ECodeStyle_002ESettingsUpgrade_002EFunctionReturnStyleSettingsUpgrader/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpKeepExistingMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpPlaceEmbeddedOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpUseContinuousIndentInsideBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAlwaysTreatStructAsNotReorderableMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Bindable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Joinable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Mvvm/@EntryIndexedValue">True</s:Boolean></wpf:ResourceDictionary>